// Generated by CoffeeScript 1.10.0
var db, feed, indexer, log;

feed = require('../lib/feed');

indexer = require('../lib/indexer');

log = require('printit')({
  prefix: 'indexcontroller'
});

db = require('../helpers/db_connect_helper').db_connect();

module.exports.index = function(req, res, next) {
  log.info('app used deprecated POST /data/index/:id');
  return indexer.waitIndexing(req.params.id, function(err) {
    return res.send(200, {
      success: true
    });
  });
};

module.exports.defineIndex = function(req, res, next) {
  var docType;
  docType = req.params.type.toLowerCase();
  return indexer.registerIndexDefinition(docType, req.body, function(err) {
    if (err) {
      return next(err);
    }
    return res.send(200, {
      success: true
    });
  });
};

module.exports.indexingStatus = function(req, res, next) {
  return indexer.status(function(err, status) {
    if (err) {
      return next(err);
    }
    return res.send(200, status);
  });
};

module.exports.search = function(req, res, next) {
  var docTypes;
  if (req.params.type) {
    docTypes = [req.params.type];
  } else {
    docTypes = req.body.doctypes || [];
  }
  return indexer.search(docTypes, req.body, function(err, results) {
    var ids;
    if (err) {
      return next(err);
    }
    ids = results.hits.map(function(hit) {
      return hit.id;
    });
    return db.get(ids, function(err, rows) {
      var row;
      if (err) {
        return next(err);
      }
      results.rows = (function() {
        var i, len, results1;
        results1 = [];
        for (i = 0, len = rows.length; i < len; i++) {
          row = rows[i];
          results1.push(row.doc);
        }
        return results1;
      })();
      return res.send(results);
    });
  });
};

module.exports.remove = function(req, res, next) {
  log.info('app used deprecated DELETE /data/index/:id');
  return setTimeout((function() {
    return res.send(200, {
      success: true
    });
  }), 100);
};

module.exports.removeAll = function(req, res, next) {
  return indexer.cleanup(function(err) {
    if (err) {
      return next(err);
    }
    return res.send(200, {
      success: true
    });
  });
};
